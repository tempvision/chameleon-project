{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table';\nimport { map, mergeMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/database\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/table\";\nimport * as i5 from \"@angular/material/button\";\n\nfunction GameplayComponent_table_0_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.currentCategoryName);\n  }\n}\n\nfunction GameplayComponent_table_0_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r17 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i_r17 + 1);\n  }\n}\n\nfunction GameplayComponent_table_0_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \"A\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"diagonal\": a0\n  };\n};\n\nfunction GameplayComponent_table_0_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r18 = ctx.$implicit;\n    const i_r19 = ctx.index;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, i_r19 % 2 === 0 || i_r19 === 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", element_r18[0], \" \");\n  }\n}\n\nfunction GameplayComponent_table_0_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \"B\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GameplayComponent_table_0_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r20 = ctx.$implicit;\n    const i_r21 = ctx.index;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, i_r21 % 2 === 1 && i_r21 !== 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r20[1]);\n  }\n}\n\nfunction GameplayComponent_table_0_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \"C\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GameplayComponent_table_0_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r22 = ctx.$implicit;\n    const i_r23 = ctx.index;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, i_r23 % 2 === 0 || i_r23 === 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r22[2]);\n  }\n}\n\nfunction GameplayComponent_table_0_th_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \"D\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GameplayComponent_table_0_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r24 = ctx.$implicit;\n    const i_r25 = ctx.index;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, i_r25 % 2 === 1 && i_r25 !== 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r24[3]);\n  }\n}\n\nfunction GameplayComponent_table_0_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 18);\n  }\n}\n\nfunction GameplayComponent_table_0_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 19);\n  }\n}\n\nfunction GameplayComponent_table_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 4);\n    i0.ɵɵelementContainerStart(1, 5);\n    i0.ɵɵtemplate(2, GameplayComponent_table_0_th_2_Template, 2, 1, \"th\", 6);\n    i0.ɵɵtemplate(3, GameplayComponent_table_0_td_3_Template, 2, 1, \"td\", 7);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(4, 8);\n    i0.ɵɵtemplate(5, GameplayComponent_table_0_th_5_Template, 2, 0, \"th\", 6);\n    i0.ɵɵtemplate(6, GameplayComponent_table_0_td_6_Template, 2, 4, \"td\", 9);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(7, 10);\n    i0.ɵɵtemplate(8, GameplayComponent_table_0_th_8_Template, 2, 0, \"th\", 6);\n    i0.ɵɵtemplate(9, GameplayComponent_table_0_td_9_Template, 2, 4, \"td\", 9);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(10, 11);\n    i0.ɵɵtemplate(11, GameplayComponent_table_0_th_11_Template, 2, 0, \"th\", 6);\n    i0.ɵɵtemplate(12, GameplayComponent_table_0_td_12_Template, 2, 4, \"td\", 9);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(13, 12);\n    i0.ɵɵtemplate(14, GameplayComponent_table_0_th_14_Template, 2, 0, \"th\", 6);\n    i0.ɵɵtemplate(15, GameplayComponent_table_0_td_15_Template, 2, 4, \"td\", 9);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(16, GameplayComponent_table_0_tr_16_Template, 1, 0, \"tr\", 13);\n    i0.ɵɵtemplate(17, GameplayComponent_table_0_tr_17_Template, 1, 0, \"tr\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dataSource\", ctx_r0.currentCategory);\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r0.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r0.displayedColumns);\n  }\n}\n\nfunction GameplayComponent_table_3_ng_container_1_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r31 = i0.ɵɵnextContext().index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(\"\\u2022\".repeat(i_r31));\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"green-bg\": a0\n  };\n};\n\nconst _c2 = function () {\n  return {\n    \"background-color\": \"#69b86e\",\n    border: \"3px solid darkblue\"\n  };\n};\n\nconst _c3 = function () {\n  return {};\n};\n\nfunction GameplayComponent_table_3_ng_container_1_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r35 = ctx.$implicit;\n    const rowIndex_r36 = ctx.index;\n    const i_r31 = i0.ɵɵnextContext().index;\n    const ctx_r33 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, i_r31 > 0 && rowIndex_r36 % 2 == i_r31 % 2 && element_r35[i_r31] != ctx_r33.chartColumns[i_r31]))(\"ngStyle\", ctx_r33.randomRow === rowIndex_r36 && i_r31 === ctx_r33.randomColumn ? i0.ɵɵpureFunction0(5, _c2) : i0.ɵɵpureFunction0(6, _c3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", element_r35[i_r31], \" \");\n  }\n}\n\nfunction GameplayComponent_table_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 22);\n    i0.ɵɵtemplate(1, GameplayComponent_table_3_ng_container_1_th_1_Template, 2, 1, \"th\", 6);\n    i0.ɵɵtemplate(2, GameplayComponent_table_3_ng_container_1_td_2_Template, 2, 7, \"td\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const col_r30 = ctx.$implicit;\n    i0.ɵɵproperty(\"matColumnDef\", col_r30);\n  }\n}\n\nfunction GameplayComponent_table_3_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 18);\n  }\n}\n\nfunction GameplayComponent_table_3_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 19);\n  }\n}\n\nfunction GameplayComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 20);\n    i0.ɵɵtemplate(1, GameplayComponent_table_3_ng_container_1_Template, 3, 1, \"ng-container\", 21);\n    i0.ɵɵtemplate(2, GameplayComponent_table_3_tr_2_Template, 1, 0, \"tr\", 13);\n    i0.ɵɵtemplate(3, GameplayComponent_table_3_tr_3_Template, 1, 0, \"tr\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dataSource\", ctx_r1.chartTable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.chartColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r1.chartColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r1.chartColumns);\n  }\n}\n\nfunction GameplayComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function GameplayComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return ctx_r39.nextRound();\n    });\n    i0.ɵɵtext(1, \"Next Round\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GameplayComponent_mat_table_5_mat_header_cell_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 15);\n    i0.ɵɵtext(1, \" Select Category \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GameplayComponent_mat_table_5_mat_cell_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r45 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r45.key, \" \");\n  }\n}\n\nfunction GameplayComponent_mat_table_5_mat_header_row_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\n\nconst _c4 = function (a0) {\n  return {\n    \"highlighted\": a0\n  };\n};\n\nfunction GameplayComponent_mat_table_5_mat_row_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-row\", 30);\n    i0.ɵɵlistener(\"click\", function GameplayComponent_mat_table_5_mat_row_5_Template_mat_row_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r48);\n      const row_r46 = restoredCtx.$implicit;\n      const ctx_r47 = i0.ɵɵnextContext(2);\n      return ctx_r47.selectCategory(row_r46);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r46 = ctx.$implicit;\n    const ctx_r44 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c4, row_r46 === ctx_r44.selectedRow));\n  }\n}\n\nfunction GameplayComponent_mat_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-table\", 26);\n    i0.ɵɵelementContainerStart(1, 27);\n    i0.ɵɵtemplate(2, GameplayComponent_mat_table_5_mat_header_cell_2_Template, 2, 0, \"mat-header-cell\", 6);\n    i0.ɵɵtemplate(3, GameplayComponent_mat_table_5_mat_cell_3_Template, 2, 1, \"mat-cell\", 7);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(4, GameplayComponent_mat_table_5_mat_header_row_4_Template, 1, 0, \"mat-header-row\", 28);\n    i0.ɵɵtemplate(5, GameplayComponent_mat_table_5_mat_row_5_Template, 1, 3, \"mat-row\", 29);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dataSource\", ctx_r3.categories);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r3.category);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r3.category);\n  }\n}\n\nexport let GameplayComponent = /*#__PURE__*/(() => {\n  class GameplayComponent {\n    constructor(db, route) {\n      this.db = db;\n      this.route = route;\n      this.currentCategory = [];\n      this.displayedColumns = ['category', 'a', 'b', 'c', 'd'];\n      this.category = ['key'];\n      this.categories = [];\n      this.chartTable = new MatTableDataSource();\n      this.chartColumns = ['col0', 'col1', 'col2', 'col3', 'col4', 'col5', 'col6'];\n      this.tableData = [['1', \"a1\", \"b2\", \"c3\", \"d4\", \"a2\", \"b1\"], ['2', \"c4\", \"d3\", \"a4\", \"b3\", \"c2\", \"d1\"], ['3', \"a3\", \"b4\", \"c1\", \"d2\", \"a4\", \"b3\"], ['4', \"c2\", \"d1\", \"a3\", \"b4\", \"c1\", \"d2\"], ['5', \"a2\", \"b1\", \"c4\", \"d3\", \"a1\", \"b2\"], ['6', \"c3\", \"d4\", \"a1\", \"b2\", \"c4\", \"d3\"], ['7', \"a4\", \"b3\", \"c2\", \"d1\", \"a3\", \"b4\"], ['8', \"c1\", \"d2\", \"a2\", \"b1\", \"c3\", \"d4\"]];\n      this.chameleonTable = [['1', 'x', 'x', 'x', 'x', 'x', 'x'], ['2', 'x', 'x', 'x', 'x', 'x', 'x'], ['3', 'x', 'x', 'x', 'x', 'x', 'x'], ['4', 'x', 'x', 'x', 'x', 'x', 'x'], ['5', 'x', 'x', 'x', 'x', 'x', 'x'], ['6', 'x', 'x', 'x', 'x', 'x', 'x'], ['7', 'x', 'x', 'x', 'x', 'x', 'x'], ['8', 'x', 'x', 'x', 'x', 'x', 'x']];\n      this.userData = sessionStorage.getItem('user');\n\n      if (this.userData) {\n        this.userData = JSON.parse(this.userData);\n      } else {// 404\n      }\n\n      this.lobbyId = this.route.snapshot.paramMap.get('id');\n    }\n\n    ngOnInit() {\n      this.chartTable.data = this.tableData; // this allows the table mapping\n\n      const objectRef = this.db.object('/cards');\n      objectRef.valueChanges().pipe(mergeMap(cards => {\n        this.allCategories = cards;\n        this.categories = Object.keys(this.allCategories).map(el => {\n          const name = el;\n          const obj = {\n            key: name\n          };\n          return obj;\n        });\n        return this.db.list(`/lobbies/${this.lobbyId}`).snapshotChanges().pipe(map(res => {\n          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n\n          this.lobbyInfo = this.getCurrentLobbyInfo(res);\n          this.lobbyInfo.users = this.lobbyInfo.users.map(el => {\n            el.isChameleon = false;\n            return el;\n          });\n\n          if (((_b = (_a = this.lobbyInfo) === null || _a === void 0 ? void 0 : _a.gameState) === null || _b === void 0 ? void 0 : _b.gameStarted) && !((_c = this.userData) === null || _c === void 0 ? void 0 : _c.admin)) {\n            // when the admin has already started the game\n            this.currentCategoryName = this.allCategories[this.lobbyInfo.gameState.category].slice(16);\n            this.currentCategory = this.mapCategoryTable(this.allCategories);\n          }\n\n          if (this.userData.userId === ((_e = (_d = this.lobbyInfo) === null || _d === void 0 ? void 0 : _d.gameState) === null || _e === void 0 ? void 0 : _e.chameleon)) {\n            // switch views\n            this.chartTable.data = this.chameleonTable;\n          } else {\n            this.chartTable.data = this.tableData;\n          }\n\n          this.randomRow = (_h = (_g = (_f = this.lobbyInfo) === null || _f === void 0 ? void 0 : _f.gameState) === null || _g === void 0 ? void 0 : _g.combination) === null || _h === void 0 ? void 0 : _h.row;\n          this.randomColumn = (_l = (_k = (_j = this.lobbyInfo) === null || _j === void 0 ? void 0 : _j.gameState) === null || _k === void 0 ? void 0 : _k.combination) === null || _l === void 0 ? void 0 : _l.column;\n        }));\n      })).subscribe();\n    }\n\n    getCurrentLobbyInfo(data) {\n      return data.reduce((acc, el) => {\n        acc[el.payload.key] = el.payload.val();\n        return acc;\n      }, {});\n    }\n\n    mapCategoryTable(incomingData) {\n      return incomingData[this.lobbyInfo.gameState.category].slice(0, 16).reduce((result, value, index) => {\n        const chunkIndex = Math.floor(index / 4);\n\n        if (!result[chunkIndex]) {\n          result[chunkIndex] = [];\n        }\n\n        result[chunkIndex].push(value);\n        return result;\n      }, []);\n    }\n\n    nextRound() {\n      this.selectedRow = false; // assign new chameleon\n\n      this.lobbyInfo.gameState = {\n        gameStarted: false,\n        category: null\n      };\n      this.dataRef.update(this.lobbyInfo); //update lobby with new chameleon\n    }\n\n    assingNewChameleon(category) {\n      this.dataRef = this.db.object(`/lobbies/${this.lobbyId}`);\n      const randomUser = this.lobbyInfo.users[Math.floor(Math.random() * this.lobbyInfo.users.length)];\n      this.randomRow = Math.floor(Math.random() * this.chameleonTable.length);\n      this.randomColumn = Math.floor(Math.random() * 6) + 1;\n      ;\n      this.lobbyInfo.gameState = {\n        gameStarted: true,\n        category: category.key,\n        chameleon: randomUser.userId,\n        combination: {\n          row: this.randomRow,\n          column: this.randomColumn\n        }\n      };\n      this.dataRef.update(this.lobbyInfo); // update lobby with new chameleon\n    }\n\n    selectCategory(event) {\n      this.assingNewChameleon(event);\n      this.selectedRow = true;\n      this.currentCategoryName = this.allCategories[event.key].slice(16);\n      this.currentCategory = this.mapTableData(event);\n    }\n\n    mapTableData(category) {\n      return this.allCategories[category.key].slice(0, 16).reduce((result, value, index) => {\n        const chunkIndex = Math.floor(index / 4);\n\n        if (!result[chunkIndex]) {\n          result[chunkIndex] = [];\n        }\n\n        result[chunkIndex].push(value);\n        return result;\n      }, []);\n    }\n\n  }\n\n  GameplayComponent.ɵfac = function GameplayComponent_Factory(t) {\n    return new (t || GameplayComponent)(i0.ɵɵdirectiveInject(i1.AngularFireDatabase), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  GameplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameplayComponent,\n    selectors: [[\"app-gameplay\"]],\n    decls: 6,\n    vars: 4,\n    consts: [[\"mat-table\", \"\", \"class\", \"mat-elevation-z8 category-table\", 3, \"dataSource\", 4, \"ngIf\"], [\"mat-table\", \"\", \"class\", \"mat-elevation-z8 chart-table\", 3, \"dataSource\", 4, \"ngIf\"], [\"class\", \"button-neu container-centered\", \"mat-raised-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"mat-elevation-z8\", 3, \"dataSource\", 4, \"ngIf\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", \"category-table\", 3, \"dataSource\"], [\"matColumnDef\", \"category\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"a\"], [\"mat-cell\", \"\", 3, \"ngClass\", 4, \"matCellDef\"], [\"matColumnDef\", \"b\"], [\"matColumnDef\", \"c\"], [\"matColumnDef\", \"d\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-cell\", \"\", 3, \"ngClass\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", \"chart-table\", 3, \"dataSource\"], [3, \"matColumnDef\", 4, \"ngFor\", \"ngForOf\"], [3, \"matColumnDef\"], [\"mat-cell\", \"\", 3, \"ngClass\", \"ngStyle\", 4, \"matCellDef\"], [\"mat-cell\", \"\", 3, \"ngClass\", \"ngStyle\"], [\"mat-raised-button\", \"\", 1, \"button-neu\", \"container-centered\", 3, \"click\"], [1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"key\"], [4, \"matHeaderRowDef\"], [\"matRipple\", \"\", 3, \"ngClass\", \"click\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"matRipple\", \"\", 3, \"ngClass\", \"click\"]],\n    template: function GameplayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, GameplayComponent_table_0_Template, 18, 3, \"table\", 0);\n        i0.ɵɵelement(1, \"hr\")(2, \"hr\");\n        i0.ɵɵtemplate(3, GameplayComponent_table_3_Template, 4, 4, \"table\", 1);\n        i0.ɵɵtemplate(4, GameplayComponent_button_4_Template, 2, 0, \"button\", 2);\n        i0.ɵɵtemplate(5, GameplayComponent_mat_table_5_Template, 6, 3, \"mat-table\", 3);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedRow || !ctx.userData.admin);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedRow || !ctx.userData.admin);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedRow && ctx.userData.admin);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.selectedRow && ctx.userData.admin);\n      }\n    },\n    directives: [i3.NgIf, i4.MatTable, i4.MatColumnDef, i4.MatHeaderCellDef, i4.MatHeaderCell, i4.MatCellDef, i4.MatCell, i3.NgClass, i4.MatHeaderRowDef, i4.MatHeaderRow, i4.MatRowDef, i4.MatRow, i3.NgForOf, i3.NgStyle, i5.MatButton],\n    styles: [\"table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{width:calc(100% / 6);text-align:center;padding:8px}.chart-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .chart-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{width:calc(100% / 7);text-align:center;border:1px solid black;padding:8px}.category-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .chart-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{width:calc(100% / 7);text-align:center}.green-bg[_ngcontent-%COMP%], .diagonal[_ngcontent-%COMP%]{background-color:#e3f2e4}.button-neu[_ngcontent-%COMP%]{margin-top:15px;color:#000;margin-bottom:15px;background:linear-gradient(145deg,#cacaca,#f0f0f0);box-shadow:12px 12px 20px #989898,-12px -12px 20px #fff}.button-neu[_ngcontent-%COMP%]:hover{color:#eb930f;background:black}.container-centered[_ngcontent-%COMP%]{margin:20px auto 0;display:block}mat-header-cell[_ngcontent-%COMP%]{justify-content:center;font-size:17px;background-color:#e3f2e4}mat-cell[_ngcontent-%COMP%]{justify-content:center}\"]\n  });\n  return GameplayComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}